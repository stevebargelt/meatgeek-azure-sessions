# Builds the MeatGeek sessions microservice resources

name: $(BuildID)
steps:
  # Build the APIs
  - task: DotNetCoreCLI@1
    displayName: Run dotnet restore
    inputs:
      command: "restore"
      projects: "src/**/*.csproj"

  - task: DotNetCoreCLI@1
    displayName: Run dotnet build
    inputs:
      projects: "src/**/*.csproj"

  - task: DotNetCoreCLI@1
    displayName: Run dotnet publish
    inputs:
      command: "publish"
      publishWebProjects: "False"
      projects: "src/**/*Api.csproj"
      arguments: "--output $(build.artifactstagingdirectory)"
      zipAfterPublish: "True"

  # Generate TechDocs
  - task: Bash@3
    inputs:
      targetType: "inline"
      script: |
        # Install @techdocs/cli, mkdocs and mkdocs plugins
        npm install -g @techdocs/cli
        pip install mkdocs-techdocs-core==0.*

        # Generate
        techdocs-cli generate --no-docker

  # Publish the APIs as an artifact
  - task: PublishBuildArtifacts@1
    displayName: Publish Azure Functions
    inputs:
      pathToPublish: $(build.artifactstagingdirectory)
      artifactName: functions
      artifactType: container

  # Publish the `deploy` folder as an artifact
  - task: PublishBuildArtifacts@1
    displayName: Publish Deployment Scripts
    inputs:
      pathToPublish: deploy
      artifactName: deploy
      artifactType: container

  # Publish the Docs as an artifact
  - task: PublishBuildArtifacts@1
    displayName: Publish Azure Functions
    inputs:
      pathToPublish: docs
      artifactName: docs
      artifactType: container
# - task: AzureKeyVault@1
#     inputs:
#       azureSubscription: 'Visual Studio Enterprise(2394ff5d-4d73-4134-a00f-2385754aeeb5)'
#       KeyVaultName: 'meatgeek-key-vault'
#       SecretsFilter: '*'
#       RunAsPreJob: false
